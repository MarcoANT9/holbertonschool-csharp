using System;

//###########################################################################
//# DELEGATES ###############################################################
//###########################################################################

//###########################################################################
//# INTERFACES ##############################################################
//###########################################################################

//###########################################################################
//# CLASSES #################################################################
//###########################################################################
///<summary>This is the Base Character class.</summary>
public class Player
{
    //=======================================================================
    //= Properties ==========================================================
    //=======================================================================

    // ~ Public ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    /// <summary>Name Property.</summary>
    public string name { get; set; }
    /// <summary>Maximum Health Points Property.</summary>
    public float maxHp { get; set; }
    /// <summary>Current Health Points Property.</summary>
    public float hp { get; set; }

    // ~ Private ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    //=======================================================================
    //= Classes =============================================================
    //=======================================================================

    // ~ Constructor ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ///<summary>Player class constructor.</summary>
    public Player(string name = "Player", float maxHp = 100.0f)
    {
        if (maxHp <= 0)
        {
            maxHp = 100.0f;
            Console.WriteLine("maxHp must be greater than 0. maxHp set to 100f by default.");
        }
        this.name = name;
        this.maxHp = maxHp;
        this.hp = maxHp;
    }
    // ~ Public ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    // ~ Private ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    //=======================================================================
    //= Methods =============================================================
    //=======================================================================

    // ~ Public ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    /// <summary>Method to print current and max health values.</summary>
    public void PrintHealth()
    {
        Console.WriteLine($"{this.name} has {this.hp} / {this.maxHp} health");
    }

    // ~ Private ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    //=======================================================================
    //= END OF CLASS ========================================================
    //=======================================================================
}

//###########################################################################
//######################### END OF FILE #####################################
//###########################################################################